sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
mycity<-getdata("select distinct place from aqi;")
source('C:/Users/xu labo/Downloads/temp/chou_test.R', encoding = 'UTF-8')
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
df
install.packages("maps")
install.packages("mapdata")
install.packages("maptools")
ff<-"7"
as.character(ff)
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
mycity<-getdata("select distinct place from aqi;")
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
#clsnum=6
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
source('C:/Users/xu labo/Downloads/R分省.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
library(maps)
library(mapdata)
library(maptools)
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
initm <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
mycity<-getdata("select distinct place from aqi;")
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
initm <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
mycity<-getdata("select distinct place from aqi;")
View(getdata)
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
#clsnum=6
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
#clsnum=6
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
#clsnum=6
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
mysql2=paste("select place as pinyin,((to_days(YMD)-to_days('",sdate,"')) div ",interval,") as vol,",myAgg," from aqi where YMD >= '",sdate,"' and YMD < adddate('",sdate,"',",during,") group by vol,place order by vol,place;",sep='');
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
# dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
#clsnum=6
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
mycity<-getdata("select distinct place from aqi;")
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.46', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
library(RMySQL)
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
getData
library(DBI)
library(RMySQL)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1', password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result, -1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
getData <- getdata('select distinct place from aqi;')
source('C:/Users/xu labo/Downloads/temp/dbTest.R')
source('C:/Users/xu labo/Downloads/temp/dbTest.R')
View(getData)
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/chou_test.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensheng.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
getwd()
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
x <- readShapePoly("bou2_4p.shp")
# 加载GIS数据
x <- readShapePoly("bou2_4p.shp")
getwd()
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
getData
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='china', user='st1',password='XfS2017x')
ChinaInfo
ChinaInfo
getdata <- function(sql) {
dfv
q()
fs
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8')
library(sqldf)
library(gsubfn)
library(proto)
library(RSQLite)
library(DBI)
library(RMySQL)
library(maps)
library(mapdata)
library(maptools)
getdata <- function(sql) {
m <- dbDriver('MySQL')
dbconnector <- dbConnect(m, host='150.43.249.60', dbname='ChinaInfo', user='st1',password='XfS2017x')
query.result <- dbGetQuery(dbconnector, 'set names utf8')
query.result <- dbSendQuery(dbconnector, sql)
alldata <- fetch(query.result,-1)
dbClearResult(query.result)
dbDisconnect(dbconnector)
return(alldata)
}
# 加载GIS数据
x <- readShapePoly("bou2_4p.shp")
# 定义地图颜色函数
getColor <- function(mapdata,provname,provcol,othercol)
{ f=function(x,y) ifelse(x %in% y,which(y==x),0);
colIndex=sapply(iconv(x@data$NAME,"GBK","UTF-8"),f,provname);
col=c(othercol,provcol)[colIndex+1];
return(col);
}
# 定义月份和污染物
getMon<-function(data2,a,mon,type)
{b=subset(data2,vol== mon)
new= merge(b,a,by="pinyin")
if(type=="PM2.5"){
typeNum = 3
} else if(type=="PM10"){
typeNum = 4
} else if(type=="SO2"){
typeNum = 5
} else if(type=="NO2"){
typeNum = 6
} else if(type=="CO2"){
typeNum = 7
} else if(type=="O3"){
typeNum = 8
}
a.mean  <- aggregate(new[,typeNum] ~ prov, data = new, FUN = "mean")
m<-a.mean[-27,]
z<-a.mean[25,2]
mk<-m[,2]
mkz<-c(mk,z)
return(mkz)
}
#画图函数
getPlot<-function(pop)
{
provname=c("安徽省","北京市","福建省","甘肃省","广东省","广西壮族自治区","贵州省","海南省","河北省","黑龙江省","河南省","湖北省","湖南省","内蒙古自治区","江苏省","江西省","吉林省","辽宁省","宁夏回族自治区","青海省","陕西省","山东省","上海市","山西省","四川省","天津市","新疆维吾尔自治区","西藏自治区","云南省","浙江省","重庆市");
nf <- layout(matrix(c(1,1,1,1,1,2,1,1,1),3,3,byrow=TRUE), c(3,1), c(3,1), TRUE)
layout.show(nf)
provcol <- rgb(red=1-pop/max(pop)/1,green=1-pop/max(pop)/1,blue=1/1.5);
plot(x,col=getColor(x,provname,provcol,"white"),xlab="",ylab="")
## 整理数据
pop <- pop - min(pop)
# 添加图例
par(mar=c(0,0,0,0))
par(mar=c(1,1,2,0),cex=0.5)
barplot(as.matrix(rep(1,29)),col=sort(provcol,dec=T),horiz=T,axes=F,border = NA )
axis(1,seq(1,30,by=3),sort(pop[seq(1,30,by=3)]))
}
main<-function(month,style) {
sdate='2014-01-01'
interval=30
period=12
during=interval*period
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
myAgg=paste(paste("round(avg(",items,"),2) as ",items,sep=''),collapse = ',')
mycity<-getdata("select distinct place from aqi;")
mysql2=paste("select place as pinyin,((to_days(YMD)-to_days('",sdate,"')) div ",interval,") as vol,",myAgg," from aqi where YMD >= '",sdate,"' and YMD < adddate('",sdate,"',",during,") group by vol,place order by vol,place;",sep='');
data2=getdata(mysql2)
a<-getdata("select name as pinyin,prov from city")
pop=getMon(data2,a,month,style)
getPlot(pop)
}
main(7,"O3")
items=c('PM2_5','PM10','SO2','NO2','CO','O3')
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8', echo=TRUE)
;
;;
;;;;
...
:
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/xu labo/Downloads/temp/dbTest.R', echo=TRUE)
source('C:/Users/xu labo/Downloads/temp/dbTest.R', echo=TRUE)
source('C:/Users/xu labo/Downloads/temp/fensh.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/xu labo/Downloads/temp/Rcode/fensh.R', encoding = 'UTF-8', echo=TRUE)
View(getColor)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(getData)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(getData)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(getData)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(getMon)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(MonthType)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/temp/Rcode/fensh.R', encoding = 'UTF-8')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
View(a)
View(a)
source('C:/Users/xu labo/Downloads/scripts/R/test0.R')
pop
View(data)
source('C:/Users/xu labo/Downloads/temp/Rcode/test/1.r')
source('C:/Users/xu labo/Downloads/temp/Rcode/test/1.r')
t.test(A,B, paired=TRUE)
A-B
diff = A-B
sum(diff)
source('C:/Users/xu labo/Downloads/scripts/Rcode/statistics/10_multi_reg.R')
source('C:/Users/xu labo/Downloads/scripts/Rcode/statistics/10_multi_reg.R')
setwd(C:\Users\xu labo\Downloads\scripts\Rcode)
setwd(C:\Users\xu labo\Downloads\scripts\Rcode)
setwd(C:\\Users\\xu labo\\Downloads\\scripts\\Rcode)
source('C:/Users/xu labo/Downloads/scripts/Rcode/statistics/10_multi_reg.R')
setwd(C:/Users/xu labo/Downloads/scripts/Rcode/statistics/)
setwd('C:/Users/xu labo/Downloads/scripts/Rcode/statistics/')
source('C:/Users/xu labo/Downloads/scripts/Rcode/statistics/10_multi_reg.R')
setwd("C:/Users/xu labo/Downloads/scripts/Rcode/test")
setwd('C:\Users\xu labo\Downloads\scripts\Rcode')
setwd(r'C:\Users\xu labo\Downloads\scripts\Rcode')
library(randomForest)
install.packages("randomForest")
library(readr)
install.packages("readr")
set.seed(0)
numTrain <- 10000
numTrees <- 25
train <- read_csv("../input/train.csv")
setwd("C:/Users/xu labo/Downloads/scripts")
source('C:/Users/xu labo/Downloads/scripts/kaggle/digit-recognizer/rf_benchmark.r')
source('C:/Users/xu labo/Downloads/scripts/kaggle/digit-recognizer/rf_benchmark.r')
setwd("C:/Users/xu labo/Downloads/scripts/kaggle/digit-recognizer")
source('C:/Users/xu labo/Downloads/scripts/kaggle/digit-recognizer/rf_benchmark.r')
source('C:/Users/xu labo/Downloads/scripts/kaggle/digit-recognizer/rf_benchmark.r')
head(predictions)
setwd("C:/Users/xu labo/Downloads/scripts/kaggle/Titanic Machine Learning from Disaster")
source('C:/Users/xu labo/Downloads/scripts/kaggle/Titanic Machine Learning from Disaster/titanic_rf_benchmark.r')
install.packages("ggplot2")
source('C:/Users/xu labo/Downloads/scripts/kaggle/Titanic Machine Learning from Disaster/titanic_rf_benchmark.r')
View(imp)
